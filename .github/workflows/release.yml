name: Create Release

on:
  push:
    branches: release_workflow

jobs:
 
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_RELEASE }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
  build:
    needs: [release]
    name: Build SU2
    strategy:
      fail-fast: false
      matrix:
        os_bin: [macos, linux]
        include: 
          - os_bin: macos
            flags: '-Dwith-mpi=false --cross-file=/hostfile_darwin'
          - os_bin: linux
            flags: '-Dwith-mpi=false'
    runs-on: ubuntu-latest

    steps:
    - name: Build
      uses: docker://su2code/build-su2-darwin:latest
      with:
        args: -b ${{github.ref}} -f "${{matrix.flags}}"
    - name: Create Archive
      run: |
        cd install
        zip -r ${{matrix.os_bin}}.zip bin
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.CREATE_RELEASE }}
      with:
        upload_url: ${{ jobs.release.steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{matrix.os_bin}}.zip
        asset_name: ${{matrix.os_bin}}.zip
        asset_content_type: application/zip
